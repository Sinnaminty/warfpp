/**
 * WarframeStat.us API
 * Simple API for data from the game Warframe. [Parser
 * Docs](https://wfcd.github.io/warframe-worldstate-parser/) [Items
 * Types](https://github.com/WFCD/warframe-items/blob/master/index.d.ts)
 *
 * The version of the OpenAPI document: 2.0.8
 * Contact: tobiah@protonmail.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Drops_inner.h
 *
 *
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Drops_inner_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Drops_inner_H_

#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {

/// <summary>
///
/// </summary>
class Drops_inner : public ModelBase {
public:
  Drops_inner();
  virtual ~Drops_inner();

  /////////////////////////////////////////////
  /// ModelBase overrides

  void validate() override;

  web::json::value toJson() const override;
  bool fromJson(const web::json::value &json) override;

  void toMultipart(std::shared_ptr<MultipartFormData> multipart,
                   const utility::string_t &namePrefix) const override;
  bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart,
                     const utility::string_t &namePrefix) override;

  /////////////////////////////////////////////
  /// Drops_inner members

  /// <summary>
  ///
  /// </summary>
  utility::string_t getItem() const;
  bool itemIsSet() const;
  void unsetItem();

  void setItem(const utility::string_t &value);

  /// <summary>
  ///
  /// </summary>
  float getChance() const;
  bool chanceIsSet() const;
  void unsetChance();

  void setChance(float value);

  /// <summary>
  ///
  /// </summary>
  utility::string_t getPlace() const;
  bool placeIsSet() const;
  void unsetPlace();

  void setPlace(const utility::string_t &value);

  /// <summary>
  ///
  /// </summary>
  utility::string_t getRarity() const;
  bool rarityIsSet() const;
  void unsetRarity();

  void setRarity(const utility::string_t &value);

protected:
  utility::string_t m_Item;
  bool m_ItemIsSet;
  float m_Chance;
  bool m_ChanceIsSet;
  utility::string_t m_Place;
  bool m_PlaceIsSet;
  utility::string_t m_Rarity;
  bool m_RarityIsSet;
};

} // namespace model
} // namespace client
} // namespace openapitools
} // namespace org

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Drops_inner_H_ */
