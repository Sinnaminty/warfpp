/**
 * WarframeStat.us API
 * Simple API for data from the game Warframe. [Parser
 * Docs](https://wfcd.github.io/warframe-worldstate-parser/) [Items
 * Types](https://github.com/WFCD/warframe-items/blob/master/index.d.ts)
 *
 * The version of the OpenAPI document: 2.0.8
 * Contact: tobiah@protonmail.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * SortieData.h
 *
 *
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_SortieData_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_SortieData_H_

#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/SortieData_bosses.h"
#include "CppRestOpenAPIClient/model/SortieData_endStates_inner.h"
#include "CppRestOpenAPIClient/model/SortieData_modifierTypes.h"
#include <cpprest/details/basic_types.h>
#include <set>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class SortieData_modifierTypes;
class SortieData_bosses;
class SortieData_endStates_inner;

/// <summary>
///
/// </summary>
class SortieData : public ModelBase {
public:
  SortieData();
  virtual ~SortieData();

  /////////////////////////////////////////////
  /// ModelBase overrides

  void validate() override;

  web::json::value toJson() const override;
  bool fromJson(const web::json::value &json) override;

  void toMultipart(std::shared_ptr<MultipartFormData> multipart,
                   const utility::string_t &namePrefix) const override;
  bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart,
                     const utility::string_t &namePrefix) override;

  /////////////////////////////////////////////
  /// SortieData members

  /// <summary>
  ///
  /// </summary>
  std::shared_ptr<SortieData_modifierTypes> getModifierTypes() const;
  bool modifierTypesIsSet() const;
  void unsetModifierTypes();

  void setModifierTypes(const std::shared_ptr<SortieData_modifierTypes> &value);

  /// <summary>
  ///
  /// </summary>
  std::shared_ptr<SortieData_modifierTypes> getModifierDescriptions() const;
  bool modifierDescriptionsIsSet() const;
  void unsetModifierDescriptions();

  void setModifierDescriptions(
      const std::shared_ptr<SortieData_modifierTypes> &value);

  /// <summary>
  ///
  /// </summary>
  std::shared_ptr<SortieData_bosses> getBosses() const;
  bool bossesIsSet() const;
  void unsetBosses();

  void setBosses(const std::shared_ptr<SortieData_bosses> &value);

  /// <summary>
  ///
  /// </summary>
  std::set<std::shared_ptr<SortieData_endStates_inner>> &getEndStates();
  bool endStatesIsSet() const;
  void unsetEndStates();

  void setEndStates(
      const std::set<std::shared_ptr<SortieData_endStates_inner>> &value);

  /// <summary>
  ///
  /// </summary>
  std::vector<utility::string_t> &getModifiers();
  bool modifiersIsSet() const;
  void unsetModifiers();

  void setModifiers(const std::vector<utility::string_t> &value);

protected:
  std::shared_ptr<SortieData_modifierTypes> m_ModifierTypes;
  bool m_ModifierTypesIsSet;
  std::shared_ptr<SortieData_modifierTypes> m_ModifierDescriptions;
  bool m_ModifierDescriptionsIsSet;
  std::shared_ptr<SortieData_bosses> m_Bosses;
  bool m_BossesIsSet;
  std::set<std::shared_ptr<SortieData_endStates_inner>> m_EndStates;
  bool m_EndStatesIsSet;
  std::vector<utility::string_t> m_Modifiers;
  bool m_ModifiersIsSet;
};

} // namespace model
} // namespace client
} // namespace openapitools
} // namespace org

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_SortieData_H_ */
