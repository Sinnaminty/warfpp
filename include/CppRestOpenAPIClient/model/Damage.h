/**
 * WarframeStat.us API
 * Simple API for data from the game Warframe. [Parser
 * Docs](https://wfcd.github.io/warframe-worldstate-parser/) [Items
 * Types](https://github.com/WFCD/warframe-items/blob/master/index.d.ts)
 *
 * The version of the OpenAPI document: 2.0.8
 * Contact: tobiah@protonmail.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Damage.h
 *
 *
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Damage_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Damage_H_

#include "CppRestOpenAPIClient/ModelBase.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

/// <summary>
///
/// </summary>
class Damage : public ModelBase {
public:
  Damage();
  virtual ~Damage();

  /////////////////////////////////////////////
  /// ModelBase overrides

  void validate() override;

  web::json::value toJson() const override;
  bool fromJson(const web::json::value &json) override;

  void toMultipart(std::shared_ptr<MultipartFormData> multipart,
                   const utility::string_t &namePrefix) const override;
  bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart,
                     const utility::string_t &namePrefix) override;

  /////////////////////////////////////////////
  /// Damage members

  /// <summary>
  ///
  /// </summary>
  double getImpact() const;
  bool impactIsSet() const;
  void unsetImpact();

  void setImpact(double value);

  /// <summary>
  ///
  /// </summary>
  double getPuncture() const;
  bool punctureIsSet() const;
  void unsetPuncture();

  void setPuncture(double value);

  /// <summary>
  ///
  /// </summary>
  double getSlash() const;
  bool slashIsSet() const;
  void unsetSlash();

  void setSlash(double value);

  /// <summary>
  ///
  /// </summary>
  double getHeat() const;
  bool heatIsSet() const;
  void unsetHeat();

  void setHeat(double value);

  /// <summary>
  ///
  /// </summary>
  double getCold() const;
  bool coldIsSet() const;
  void unsetCold();

  void setCold(double value);

  /// <summary>
  ///
  /// </summary>
  double getElectric() const;
  bool electricIsSet() const;
  void unsetElectric();

  void setElectric(double value);

  /// <summary>
  ///
  /// </summary>
  double getToxin() const;
  bool toxinIsSet() const;
  void unsetToxin();

  void setToxin(double value);

  /// <summary>
  ///
  /// </summary>
  double getGas() const;
  bool gasIsSet() const;
  void unsetGas();

  void setGas(double value);

  /// <summary>
  ///
  /// </summary>
  double getViral() const;
  bool viralIsSet() const;
  void unsetViral();

  void setViral(double value);

  /// <summary>
  ///
  /// </summary>
  double getCorrosive() const;
  bool corrosiveIsSet() const;
  void unsetCorrosive();

  void setCorrosive(double value);

  /// <summary>
  ///
  /// </summary>
  double getBlast() const;
  bool blastIsSet() const;
  void unsetBlast();

  void setBlast(double value);

  /// <summary>
  ///
  /// </summary>
  double getMagnetic() const;
  bool magneticIsSet() const;
  void unsetMagnetic();

  void setMagnetic(double value);

  /// <summary>
  ///
  /// </summary>
  double getRadiation() const;
  bool radiationIsSet() const;
  void unsetRadiation();

  void setRadiation(double value);

  /// <summary>
  ///
  /// </summary>
  double getRTrue() const;
  bool rTrueIsSet() const;
  void unsetr_true();

  void setRTrue(double value);

  /// <summary>
  ///
  /// </summary>
  double getRVoid() const;
  bool rVoidIsSet() const;
  void unsetr_void();

  void setRVoid(double value);

protected:
  double m_Impact;
  bool m_ImpactIsSet;
  double m_Puncture;
  bool m_PunctureIsSet;
  double m_Slash;
  bool m_SlashIsSet;
  double m_Heat;
  bool m_HeatIsSet;
  double m_Cold;
  bool m_ColdIsSet;
  double m_Electric;
  bool m_ElectricIsSet;
  double m_Toxin;
  bool m_ToxinIsSet;
  double m_Gas;
  bool m_GasIsSet;
  double m_Viral;
  bool m_ViralIsSet;
  double m_Corrosive;
  bool m_CorrosiveIsSet;
  double m_Blast;
  bool m_BlastIsSet;
  double m_Magnetic;
  bool m_MagneticIsSet;
  double m_Radiation;
  bool m_RadiationIsSet;
  double m_r_true;
  bool m_r_trueIsSet;
  double m_r_void;
  bool m_r_voidIsSet;
};

} // namespace model
} // namespace client
} // namespace openapitools
} // namespace org

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Damage_H_ */
