/**
 * WarframeStat.us API
 * Simple API for data from the game Warframe. [Parser
 * Docs](https://wfcd.github.io/warframe-worldstate-parser/) [Items
 * Types](https://github.com/WFCD/warframe-items/blob/master/index.d.ts)
 *
 * The version of the OpenAPI document: 2.0.8
 * Contact: tobiah@protonmail.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Riven_rivenCompatability_value.h
 *
 *
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Riven_rivenCompatability_value_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Riven_rivenCompatability_value_H_

#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/RivenStatistic.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class RivenStatistic;

/// <summary>
///
/// </summary>
class Riven_rivenCompatability_value : public ModelBase {
public:
  Riven_rivenCompatability_value();
  virtual ~Riven_rivenCompatability_value();

  /////////////////////////////////////////////
  /// ModelBase overrides

  void validate() override;

  web::json::value toJson() const override;
  bool fromJson(const web::json::value &json) override;

  void toMultipart(std::shared_ptr<MultipartFormData> multipart,
                   const utility::string_t &namePrefix) const override;
  bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart,
                     const utility::string_t &namePrefix) override;

  /////////////////////////////////////////////
  /// Riven_rivenCompatability_value members

  /// <summary>
  ///
  /// </summary>
  std::shared_ptr<RivenStatistic> getRolled() const;
  bool rolledIsSet() const;
  void unsetRolled();

  void setRolled(const std::shared_ptr<RivenStatistic> &value);

  /// <summary>
  ///
  /// </summary>
  std::shared_ptr<RivenStatistic> getUnrolled() const;
  bool unrolledIsSet() const;
  void unsetUnrolled();

  void setUnrolled(const std::shared_ptr<RivenStatistic> &value);

protected:
  std::shared_ptr<RivenStatistic> m_Rolled;
  bool m_RolledIsSet;
  std::shared_ptr<RivenStatistic> m_Unrolled;
  bool m_UnrolledIsSet;
};

} // namespace model
} // namespace client
} // namespace openapitools
} // namespace org

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Riven_rivenCompatability_value_H_ */
