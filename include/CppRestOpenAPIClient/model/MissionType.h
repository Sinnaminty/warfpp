/**
 * WarframeStat.us API
 * Simple API for data from the game Warframe. [Parser
 * Docs](https://wfcd.github.io/warframe-worldstate-parser/) [Items
 * Types](https://github.com/WFCD/warframe-items/blob/master/index.d.ts)
 *
 * The version of the OpenAPI document: 2.0.8
 * Contact: tobiah@protonmail.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MissionType.h
 *
 * A Warframe mision type, the kind of game mode that the mission/node houses.
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_MissionType_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_MissionType_H_

#include "CppRestOpenAPIClient/ModelBase.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class MissionType : public ModelBase {
public:
  MissionType();
  virtual ~MissionType();

  /////////////////////////////////////////////
  /// ModelBase overrides

  void validate() override;

  web::json::value toJson() const override;
  bool fromJson(const web::json::value &json) override;

  void toMultipart(std::shared_ptr<MultipartFormData> multipart,
                   const utility::string_t &namePrefix) const override;
  bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart,
                     const utility::string_t &namePrefix) override;

  enum class eMissionType {
    MissionType_ANCIENT_RETRIBUTION,
    MissionType_ARENA,
    MissionType_ASSASSINATION,
    MissionType_ASSAULT,
    MissionType_CAPTURE,
    MissionType_CONCLAVE,
    MissionType_DARK_SECTOR_DEFECTION,
    MissionType_DARK_SECTOR_DEFENSE,
    MissionType_DARK_SECTOR_DISRUPTION,
    MissionType_DARK_SECTOR_EXCAVATION,
    MissionType_DARK_SECTOR_SABOTAGE,
    MissionType_DARK_SECTOR_SURVIVAL,
    MissionType_DEFENSE,
    MissionType_DISRUPTION,
    MissionType_EXCAVATION,
    MissionType_EXTERMINATION_ARCHWING_,
    MissionType_EXTERMINATION,
    MissionType_FREE_ROAM,
    MissionType_HIJACK,
    MissionType_HIVE,
    MissionType_HIVE_SABOTAGE,
    MissionType_INTERCEPTION,
    MissionType_INTERCEPTION_ARCHWING_,
    MissionType_MOBILE_DEFENSE,
    MissionType_MOBILE_DEFENSE_ARCHWING_,
    MissionType_OROKIN_SABOTAGE,
    MissionType_ORPHIX,
    MissionType_PURSUIT_ARCHWING_,
    MissionType_RELAY,
    MissionType_RESCUE,
    MissionType_RUSH_ARCHWING_,
    MissionType_SABOTAGE,
    MissionType_SABOTAGE_ARCHWING_,
    MissionType_SKIRMISH,
    MissionType_SPY,
    MissionType_SURVIVAL,
    MissionType_VOLATILE,
  };

  eMissionType getValue() const;
  void setValue(eMissionType const value);

protected:
  eMissionType m_value;
};

} // namespace model
} // namespace client
} // namespace openapitools
} // namespace org

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_MissionType_H_ */
