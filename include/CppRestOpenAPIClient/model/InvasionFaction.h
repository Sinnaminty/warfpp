/**
 * WarframeStat.us API
 * Simple API for data from the game Warframe. [Parser
 * Docs](https://wfcd.github.io/warframe-worldstate-parser/) [Items
 * Types](https://github.com/WFCD/warframe-items/blob/master/index.d.ts)
 *
 * The version of the OpenAPI document: 2.0.8
 * Contact: tobiah@protonmail.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * InvasionFaction.h
 *
 *
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_InvasionFaction_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_InvasionFaction_H_

#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/Faction.h"
#include "CppRestOpenAPIClient/model/Reward.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class Reward;

/// <summary>
///
/// </summary>
class InvasionFaction : public ModelBase {
public:
  InvasionFaction();
  virtual ~InvasionFaction();

  /////////////////////////////////////////////
  /// ModelBase overrides

  void validate() override;

  web::json::value toJson() const override;
  bool fromJson(const web::json::value &json) override;

  void toMultipart(std::shared_ptr<MultipartFormData> multipart,
                   const utility::string_t &namePrefix) const override;
  bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart,
                     const utility::string_t &namePrefix) override;

  /////////////////////////////////////////////
  /// InvasionFaction members

  /// <summary>
  ///
  /// </summary>
  std::shared_ptr<Reward> getReward() const;
  bool rewardIsSet() const;
  void unsetReward();

  void setReward(const std::shared_ptr<Reward> &value);

  /// <summary>
  ///
  /// </summary>
  std::shared_ptr<Faction> getFaction() const;
  bool factionIsSet() const;
  void unsetFaction();

  void setFaction(const std::shared_ptr<Faction> &value);

  /// <summary>
  ///
  /// </summary>
  std::shared_ptr<Faction> getFactionKey() const;
  bool factionKeyIsSet() const;
  void unsetFactionKey();

  void setFactionKey(const std::shared_ptr<Faction> &value);

protected:
  std::shared_ptr<Reward> m_Reward;
  bool m_RewardIsSet;
  std::shared_ptr<Faction> m_Faction;
  bool m_FactionIsSet;
  std::shared_ptr<Faction> m_FactionKey;
  bool m_FactionKeyIsSet;
};

} // namespace model
} // namespace client
} // namespace openapitools
} // namespace org

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_InvasionFaction_H_ */
